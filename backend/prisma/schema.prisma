// === Generated by ChatGPT: Prisma schema (single User, Role enum, PhoneNumber) ===

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Roles for users
enum Role {
  USER
  ADMIN
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  username     String?  @unique
  firstName    String?
  lastName     String?
  role         Role     @default(USER)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // relations
  emailVerifyTokens EmailVerifyToken[]
  resetTokens       ResetToken[]
}

model PhoneNumber {
  id            Int      @id @default(autoincrement())
  countryCode   String
  countryName   String
  mobileNumber  String
  number800     String?
  category      String?
  connectionFee Int
  monthlyFee    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Plan {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  dataMb      Int
  minutes     Int
  sms         Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Email verification tokens
model EmailVerifyToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

// Password reset tokens (used by forgot/reset password flow)
model ResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}
