import React, { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { api, setToken } from '../lib/api';
import PhoneNumbersTable, { type PhoneNumberRow } from '../components/PhoneNumbersTable';

const API = import.meta.env.VITE_API_URL ?? 'http://localhost:4000';
import { loadMyNumbers, markPaidMyNumber, removeMyNumber, type MyNumber } from '../lib/myNumber';

interface User {
  id: string;
  email: string;
  name: string;
  balance: number;
  phoneNumber?: string;
}

interface DashboardData {
  user: User;
  connectedNumbers: any[];
  availableNumbers: any[];
}

const Dashboard: React.FC = () => {
  const navigate = useNavigate();
  const [data, setData] = useState<DashboardData | null>(null);
  const [loading, setLoading] = useState(true);
  
  // üß™ MVP –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú
  // –î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 500$ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const testBalance = 500;
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –∏–∑ localStorage
  const getCurrentBalance = () => {
    const savedBalance = localStorage.getItem('userBalance');
    // –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 500$
    if (savedBalance === null) {
      return testBalance;
    }
    return parseInt(savedBalance, 10);
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–∞
  const refetch = async () => {
    try {
      const r = await api.get("/users/me/dashboard");
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∏–∑ localStorage
      const currentBalance = getCurrentBalance();
      const dataWithCurrentBalance = {
        ...r.data,
        user: {
          ...r.data.user,
          balance: currentBalance
        }
      };
      setData(dataWithCurrentBalance);
    } catch (error) {
      console.error("Failed to load dashboard data:", error);
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
      const currentBalance = getCurrentBalance();
      setData({
        user: {
          id: '1',
          email: 'test@example.com',
          name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          balance: currentBalance
        },
        connectedNumbers: [],
        availableNumbers: []
      });
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    // –î–ª—è MVP —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Å –±–∞–ª–∞–Ω—Å–∞ 500$
    if (!localStorage.getItem('userBalance')) {
      localStorage.setItem('userBalance', testBalance.toString());
    }
    
    refetch();
  }, []);
  
  // –°–ª—É—à–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
  useEffect(() => {
    const handleBalanceUpdate = (event: CustomEvent) => {
      const { newBalance, connectedNumber } = event.detail;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
      setData(prev => prev ? {
        ...prev,
        user: { ...prev.user, balance: newBalance }
      } : prev);
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–π –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ myNumbers
      if (connectedNumber) {
        const now = Date.now();
        const newNumber: MyNumber = {
          id: connectedNumber.id,
          mobileNumber: connectedNumber.mobileNumber,
          countryName: connectedNumber.countryName,
          countryCode: connectedNumber.countryCode,
          status: 'paid',
          reservedAt: now,
          expiresAt: null
        };
        
        setMyNumbers(prev => [...prev, newNumber]);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        window.dispatchEvent(new Event('my-numbers-updated'));
      }
    };
    
    window.addEventListener('balance-updated', handleBalanceUpdate as EventListener);
    return () => window.removeEventListener('balance-updated', handleBalanceUpdate as EventListener);
  }, []);

  function computeDisplayName(me: { firstName?: string | null; lastName?: string | null; username?: string | null; email: string; }): string {
    const first = (me.firstName || '').trim();
    const last = (me.lastName || '').trim();
    const full = `${first} ${last}`.trim();
    if (full) return full;
    if (me.username && me.username.trim()) return me.username.trim();
    return me.email;
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
  async function topup(amount: number) {
    if (!data) return;
    
    // –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    setData(prev => prev ? { 
      ...prev, 
      user: { ...prev.user, balance: (prev.user.balance ?? 0) + amount } 
    } : prev);
    
    try {
      // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
      // await api.post("/billing/topup", { amount });
      // await refetch(); // –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω —Å –ë–î)
      
      // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ localStorage
      const newBalance = (data?.user.balance ?? 0) + amount;
      localStorage.setItem('userBalance', newBalance.toString());
      
      setTimeout(() => {
        setData(prev => prev ? { 
          ...prev, 
          user: { ...prev.user, balance: newBalance } 
        } : prev);
      }, 500);
    } catch (error) {
      console.error("Topup failed:", error);
      // await refetch(); // –æ—Ç–∫–∞—Ç –∫ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –ë–î –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–∏—Ö –º–µ–Ω—é
  const [isServicesDropdownOpen, setIsServicesDropdownOpen] = useState(false);
  const [isSettingsDropdownOpen, setIsSettingsDropdownOpen] = useState(false);
  const [isAccountDropdownOpen, setIsAccountDropdownOpen] = useState(false);
  const [isPbxDropdownOpen, setIsPbxDropdownOpen] = useState(false);
  const [isUserDropdownOpen, setIsUserDropdownOpen] = useState(false);
  
  // –ú–æ–∏ –Ω–æ–º–µ—Ä–∞ (–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
  const [myNumbers, setMyNumbers] = useState<MyNumber[]>(loadMyNumbers());
  const [publicNumbers, setPublicNumbers] = useState<PhoneNumberRow[]>([]);
  const [publicErr, setPublicErr] = useState<string | null>(null);

  async function loadPublicNumbers() {
    try {
      const r = await fetch(`${API}/api/phone-numbers/public`);
      if (!r.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤');
      setPublicNumbers(await r.json());
      setPublicErr(null);
    } catch (e: unknown) {
      const err = e as { message?: string } | undefined;
      setPublicErr(err?.message ?? String(e ?? '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤'));
    }
  }

  const handleLogout = () => {
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    localStorage.removeItem('userBalance');
    localStorage.removeItem('mvno_my_numbers');
    localStorage.removeItem('accessToken');
    
    setToken(undefined);
    navigate('/');
  };

  // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ (–ª–æ–∫–∞–ª—å–Ω–æ)
  useEffect(() => {
    const refresh = () => setMyNumbers(loadMyNumbers());
    refresh();
    const onUpdate = () => { refresh(); };
    window.addEventListener('my-numbers-updated', onUpdate);
  loadPublicNumbers();
    return () => window.removeEventListener('my-numbers-updated', onUpdate);
  }, []);

  const paidNumbers = myNumbers.filter(n => n.status === 'paid');
  const reservedNumbers = myNumbers.filter(n => n.status === 'reserved');

  function handleConnect(id: number) {
    markPaidMyNumber(id);
    setMyNumbers(loadMyNumbers());
  }

  function handleCancel(id: number) {
    removeMyNumber(id);
    setMyNumbers(loadMyNumbers());
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center">
        <div className="text-lg text-slate-600">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>
      </div>
    );
  }

  if (!data) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center">
        <div className="text-lg text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center gap-8">
              {/* Logo */}
              <Link to="/" className="flex items-center">
                <img 
                  src="/logo/logo.png" 
                  alt="Mobilive" 
                  className="h-8"
                />
              </Link>

              {/* Navigation Menu */}
              <nav className="hidden md:flex items-center gap-6 text-sm font-medium">
                {/* –ú–æ–∏ —É—Å–ª—É–≥–∏ */}
                <div 
                  className="relative"
                  onMouseEnter={() => setIsServicesDropdownOpen(true)}
                  onMouseLeave={() => setIsServicesDropdownOpen(false)}
                >
                  <button className="flex items-center gap-1 text-slate-700 hover:text-teal-600 transition-colors">
                    –ú–æ–∏ —É—Å–ª—É–≥–∏
                    <svg className={`w-4 h-4 transition-transform duration-200 ${isServicesDropdownOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                    </svg>
                  </button>
                  
                  <div className={`absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden transition-all duration-200 ${
                    isServicesDropdownOpen ? 'opacity-100 visible translate-y-0' : 'opacity-0 invisible -translate-y-2'
                  }`}>
                    <div className="py-2">
                      <Link to="/call-from-site" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üìû</div>
                        <div>
                          <div className="font-medium">–ó–≤–æ–Ω–∏—Ç—å —Å —Å–∞–π—Ç–∞</div>
                          <div className="text-xs text-slate-500">–ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏</div>
                        </div>
                      </Link>
                      <Link to="/add-number" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üì±</div>
                        <div>
                          <div className="font-medium">–ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–º–µ—Ä</div>
                          <div className="text-xs text-slate-500">–ù–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞</div>
                        </div>
                      </Link>
                      <Link to="/esim-travel" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üì±</div>
                        <div>
                          <div className="font-medium">eSIM –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π</div>
                          <div className="text-xs text-slate-500">–†–æ—É–º–∏–Ω–≥</div>
                        </div>
                      </Link>
                      <Link to="/sms-broadcast" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üí¨</div>
                        <div>
                          <div className="font-medium">SMS —Ä–∞—Å—Å—ã–ª–∫–∞</div>
                          <div className="text-xs text-slate-500">–ú–∞—Å—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</div>
                        </div>
                      </Link>
                      <Link to="/callback" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>‚Ü©Ô∏è</div>
                        <div>
                          <div className="font-medium">–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</div>
                          <div className="text-xs text-slate-500">–í—Ö–æ–¥—è—â–∏–µ –∑–∞—è–≤–∫–∏</div>
                        </div>
                      </Link>
                      <Link to="/hlr-check" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üìã</div>
                        <div>
                          <div className="font-medium">–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ (HLR)</div>
                          <div className="text-xs text-slate-500">–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–æ–≤</div>
                        </div>
                      </Link>
                    </div>
                  </div>
                </div>

                {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
                <div 
                  className="relative"
                  onMouseEnter={() => setIsSettingsDropdownOpen(true)}
                  onMouseLeave={() => setIsSettingsDropdownOpen(false)}
                >
                  <button className="flex items-center gap-1 text-slate-700 hover:text-teal-600 transition-colors">
                    –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                    <svg className={`w-4 h-4 transition-transform duration-200 ${isSettingsDropdownOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                    </svg>
                  </button>
                  
                  <div className={`absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden transition-all duration-200 ${
                    isSettingsDropdownOpen ? 'opacity-100 visible translate-y-0' : 'opacity-0 invisible -translate-y-2'
                  }`}>
                    <div className="py-2">
                      <Link to="/sip-settings" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üì°</div>
                        <div>
                          <div className="font-medium">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ SIP</div>
                          <div className="text-xs text-slate-500">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞</div>
                        </div>
                      </Link>
                      <Link to="/virtual-numbers" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üî¢</div>
                        <div>
                          <div className="font-medium">–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞</div>
                          <div className="text-xs text-slate-500">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞–º–∏</div>
                        </div>
                      </Link>
                      <Link to="/api-integrations" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üîó</div>
                        <div>
                          <div className="font-medium">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ API</div>
                          <div className="text-xs text-slate-500">–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º</div>
                        </div>
                      </Link>
                      <Link to="/profile" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üë§</div>
                        <div>
                          <div className="font-medium">–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</div>
                          <div className="text-xs text-slate-500">–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</div>
                        </div>
                      </Link>
                    </div>
                  </div>
                </div>

                {/* –ú–æ–π —Å—á–µ—Ç */}
                <div 
                  className="relative"
                  onMouseEnter={() => setIsAccountDropdownOpen(true)}
                  onMouseLeave={() => setIsAccountDropdownOpen(false)}
                >
                  <button className="flex items-center gap-1 text-slate-700 hover:text-teal-600 transition-colors">
                    –ú–æ–π —Å—á–µ—Ç
                    <svg className={`w-4 h-4 transition-transform duration-200 ${isAccountDropdownOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                    </svg>
                  </button>
                  
                  <div className={`absolute top-full left-0 mt-2 w-64 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden transition-all duration-200 ${
                    isAccountDropdownOpen ? 'opacity-100 visible translate-y-0' : 'opacity-0 invisible -translate-y-2'
                  }`}>
                    <div className="py-2">
                      <Link to="/call-statistics" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üìä</div>
                        <div>
                          <div className="font-medium">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–≤–æ–Ω–∫–æ–≤</div>
                          <div className="text-xs text-slate-500">–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
                        </div>
                      </Link>
                      <Link to="/payments-expenses" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>üí∞</div>
                        <div>
                          <div className="font-medium">–ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Ä–∞—Å—Ö–æ–¥—ã</div>
                          <div className="text-xs text-slate-500">–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</div>
                        </div>
                      </Link>
                    </div>
                  </div>
                </div>

                {/* –ú–æ–π –ê–¢–° */}
                <div 
                  className="relative"
                  onMouseEnter={() => setIsPbxDropdownOpen(true)}
                  onMouseLeave={() => setIsPbxDropdownOpen(false)}
                >
                  <button className="flex items-center gap-1 text-slate-700 hover:text-teal-600 transition-colors">
                    –ú–æ–π –ê–¢–°
                    <svg className={`w-4 h-4 transition-transform duration-200 ${isPbxDropdownOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                    </svg>
                  </button>
                  
                  <div className={`absolute top-full left-0 mt-2 w-80 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden transition-all duration-200 ${
                    isPbxDropdownOpen ? 'opacity-100 visible translate-y-0' : 'opacity-0 invisible -translate-y-2'
                  }`}>
                    <div className="py-2">
                      <Link to="/internal-numbers" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üè¢</div>
                        <div>
                          <div className="font-medium">–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–æ–º–µ—Ä–∞</div>
                          <div className="text-xs text-slate-500">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ç–µ–ª–µ—Ñ–æ–Ω–∏—è</div>
                        </div>
                      </Link>
                      <Link to="/pbx-features" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üéôÔ∏è</div>
                        <div>
                          <div className="font-medium">–ó–∞–ø–∏—Å—å, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏, –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è</div>
                          <div className="text-xs text-slate-500">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</div>
                        </div>
                      </Link>
                      <Link to="/call-history" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üìû</div>
                        <div>
                          <div className="font-medium">–ò—Å—Ç–æ—Ä–∏—è –∑–≤–æ–Ω–∫–æ–≤</div>
                          <div className="text-xs text-slate-500">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è</div>
                        </div>
                      </Link>
                      <Link to="/external-lines" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üì°</div>
                        <div>
                          <div className="font-medium">–í–Ω–µ—à–Ω–∏–µ –ª–∏–Ω–∏–∏</div>
                          <div className="text-xs text-slate-500">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è</div>
                        </div>
                      </Link>
                      <Link to="/pbx-statistics" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-teal-50 hover:text-teal-600 transition-colors">
                        <div className="w-8 h-8 rounded-lg flex items-center justify-center text-white text-sm" style={{background: `linear-gradient(to right, #1C9C94, #0A7B75)`}}>üìà</div>
                        <div>
                          <div className="font-medium">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</div>
                          <div className="text-xs text-slate-500">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ê–¢–°</div>
                        </div>
                      </Link>
                    </div>
                  </div>
                </div>
              </nav>
            </div>

            {/* User Menu */}
            <div className="flex items-center gap-4">
              <div className="hidden md:block text-sm text-slate-600">
                –ú–æ–π –±–∞–ª–∞–Ω—Å: <span className="font-bold" style={{color: '#0A7B75'}}>${data.user.balance?.toLocaleString() ?? 0}</span>
              </div>
              
              <div 
                className="relative"
                onMouseEnter={() => setIsUserDropdownOpen(true)}
                onMouseLeave={() => setIsUserDropdownOpen(false)}
              >
                <button className="flex items-center gap-2 text-slate-700 hover:text-slate-900 transition-colors">
                  <div className="w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-semibold" style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}>
                    {(computeDisplayName(data.user) || 'U').charAt(0)}
                  </div>
                  <span className="hidden md:block font-medium">{computeDisplayName(data.user) || '–ü—Ä–æ—Ñ–∏–ª—å'}</span>
                  <svg className={`w-4 h-4 transition-transform duration-200 ${isUserDropdownOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                  </svg>
                </button>
                
                <div className={`absolute top-full right-0 mt-2 w-56 bg-white rounded-xl shadow-xl border border-slate-200 overflow-hidden transition-all duration-200 ${
                  isUserDropdownOpen ? 'opacity-100 visible translate-y-0' : 'opacity-0 invisible -translate-y-2'
                }`}>
                  <div className="py-2">
                    <Link to="/profile" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-slate-50 transition-colors">
                      <div className="w-8 h-8 rounded-lg bg-blue-100 flex items-center justify-center text-blue-600 text-sm">üë§</div>
                      <div>
                        <div className="font-medium">–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</div>
                        <div className="text-xs text-slate-500">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞</div>
                      </div>
                    </Link>
                    <Link to="/topup" className="flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-slate-50 transition-colors">
                      <div className="w-8 h-8 rounded-lg bg-green-100 flex items-center justify-center text-green-600 text-sm">üí≥</div>
                      <div>
                        <div className="font-medium">–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç</div>
                        <div className="text-xs text-slate-500">–ë–∞–ª–∞–Ω—Å: ${data.user.balance?.toLocaleString() ?? 0}</div>
                      </div>
                    </Link>
                    <hr className="my-2" />
                    <button 
                      onClick={handleLogout}
                      className="w-full flex items-center gap-3 px-4 py-3 text-slate-700 hover:bg-red-50 hover:text-red-600 transition-colors"
                    >
                      <div className="w-8 h-8 rounded-lg bg-red-100 flex items-center justify-center text-red-600 text-sm">üö™</div>
                      <div>
                        <div className="font-medium">–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã</div>
                        <div className="text-xs text-slate-500">–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–∞–Ω—Å</div>
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <section className="mb-8">
          <div className="bg-white rounded-xl shadow-sm border border-slate-200 p-6">
            <h2 className="text-xl font-bold mb-4">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div>
                <div className="text-sm text-slate-500">Email:</div>
                <div className="font-medium">{data.user.email}</div>
              </div>
              <div>
                <div className="text-sm text-slate-500">–ë–∞–ª–∞–Ω—Å:</div>
                <div className="font-bold text-lg" style={{color: '#0A7B75'}}>${data.user.balance?.toLocaleString() ?? 0}</div>
          </div>
        </div>

          </div>
        </section>

        {/* Connected Numbers Section */}
        <div className="mb-8">
          <div className="bg-white rounded-xl shadow-sm border border-slate-200 p-6">
            <div className="block">
              <div>
                <h2 className="text-xl font-semibold text-slate-900 mb-2">–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞</h2>
                {myNumbers.length > 0 ? (
                  <div className="space-y-3">
                    {/* –û–ø–ª–∞—á–µ–Ω–Ω—ã–µ */}
                    {paidNumbers.map(n => (
                      <div key={n.id} className="w-full grid grid-cols-[1fr_auto] items-center p-4 bg-white rounded-xl border border-slate-200 shadow-sm">
                        <div className="flex items-center gap-4 min-w-0">
                          <div className="text-2xl font-mono font-bold" style={{color: '#0A7B75'}}>
                            {n.mobileNumber}
                          </div>
                          <span className="text-sm text-slate-500">{n.countryName} {n.countryCode}</span>
                        </div>
                        <div className="flex items-center gap-3 justify-end">
                          <button
                            onClick={() => handleCancel(n.id)}
                            className="px-4 py-2 rounded-xl font-medium border border-red-200 bg-white text-red-600 hover:bg-red-50 hover:border-red-300 shadow-sm transition-colors"
                          >
                            –û—Ç–º–µ–Ω–∏—Ç—å
                          </button>
                        </div>
                      </div>
                    ))}
                    {/* –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ */}
                    {reservedNumbers.map(n => (
                      <div key={n.id} className="w-full grid grid-cols-[1fr_auto] items-center p-4 bg-white rounded-xl border border-slate-200 shadow-sm">
                        <div className="flex items-center gap-4 min-w-0">
                          <div className="text-2xl font-mono font-bold" style={{color: '#0A7B75'}}>
                            {n.mobileNumber}
                          </div>
                          <span className="text-sm text-slate-500">{n.countryName} {n.countryCode}</span>
                        </div>
                        <div className="flex items-center gap-3 justify-end">
                          <button
                            onClick={() => handleConnect(n.id)}
                            className="px-4 py-2 rounded-xl text-white font-medium shadow-lg hover:shadow-xl transition-all duration-200"
                            style={{background: `linear-gradient(to right, #0A7B75, #1C9C94)`}}
                          >
                            –ü–æ–¥–∫–ª—é—á–∏—Ç—å
                          </button>
                          <button
                            onClick={() => handleCancel(n.id)}
                            className="px-4 py-2 rounded-xl font-medium border border-red-200 bg-white text-red-600 hover:bg-red-50 hover:border-red-300 shadow-sm transition-colors"
                          >
                            –û—Ç–º–µ–Ω–∏—Ç—å
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-slate-600">–ù–∏ –æ–¥–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ</div>
                )}
              </div>
              
              {/* –ö–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∞ —É–±—Ä–∞–Ω–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é */}
            </div>
          </div>
        </div>

        {/* Available Numbers Section */}
        <div className="mb-8">
          <div className="bg-white rounded-xl shadow-sm border border-slate-200 p-6">
            <h2 className="text-lg font-semibold mb-4">–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–º–µ—Ä–∞</h2>
            {publicErr && <div className="text-red-600 mb-4">{publicErr}</div>}
            <PhoneNumbersTable
              rows={publicNumbers}
              readOnly={true}
              actionLabel={'–ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–º–µ—Ä'}
              onBuy={(row) => {
                // navigate to connect page with selected number
                navigate('/connect-number', { 
                  state: { 
                    id: row.id, 
                    mobileNumber: row.mobileNumber,
                    connectionFee: row.connectionFee,
                    monthlyFee: row.monthlyFee,
                    countryName: row.countryName,
                    countryCode: row.countryCode
                  } 
                });
              }}
            />
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-slate-900 text-white mt-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            {/* Company Info */}
            <div className="md:col-span-2">
              <img 
                src="/logo/logo.png" 
                alt="Mobilive" 
                className="h-8 mb-4 filter brightness-0 invert"
              />
              <h3 className="text-lg font-semibold mb-4">–û –∫–æ–º–ø–∞–Ω–∏–∏ Mobilive</h3>
              <p className="text-slate-300 mb-4">
                Mobilive ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è MVNO –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –ø–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —É—Å–ª—É–≥. 
                –ú—ã –ø–æ–º–æ–≥–∞–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.
              </p>
              <div className="space-y-2 text-sm text-slate-400">
                <div>üìß Email: info@mobilive.ru</div>
                <div>üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 123-45-67</div>
                <div>üìç –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è, –¥. 10, —Å—Ç—Ä. 1</div>
                <div>üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç 9:00-18:00</div>
              </div>
            </div>

            {/* Legal Info */}
            <div>
              <h4 className="text-lg font-semibold mb-4">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
              <div className="space-y-2 text-sm text-slate-300">
                <div>–û–û–û "–ú–æ–±–∏–ª–∞–π–≤"</div>
                <div>–ò–ù–ù: 7704123456</div>
                <div>–ö–ü–ü: 770401001</div>
                <div>–û–ì–†–ù: 1234567890123</div>
                <div>–õ–∏—Ü–µ–Ω–∑–∏—è: ‚Ññ123456 –æ—Ç 01.01.2020</div>
              </div>
            </div>

            {/* Links */}
            <div>
              <h4 className="text-lg font-semibold mb-4">–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏</h4>
              <div className="space-y-2">
                <Link to="/support" className="block text-slate-300 hover:text-white transition-colors">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</Link>
                <Link to="/docs" className="block text-slate-300 hover:text-white transition-colors">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API</Link>
                <Link to="/privacy" className="block text-slate-300 hover:text-white transition-colors">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</Link>
                <Link to="/terms" className="block text-slate-300 hover:text-white transition-colors">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</Link>
              </div>
            </div>
          </div>

          <div className="border-t border-slate-700 mt-8 pt-8 text-center text-slate-400">
            <p>&copy; 2024 Mobilive. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Dashboard;